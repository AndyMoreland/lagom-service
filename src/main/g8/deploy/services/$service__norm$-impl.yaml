kind: Service
apiVersion: v1
metadata:
  name: $service;format="normalize"$-impl-service
spec:
  selector:
    app: $service;format="normalize"$-impl-service
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: $service;format="normalize"$-impl-deployment
spec:
  strategy:
    type: Recreate
    rollingUpdate: null
  replicas: 1
  template:
    metadata:
      labels:
        app: $service;format="normalize"$-impl
    spec:
      containers:
      - name: $service;format="normalize"$-impl
        image: gcr.io/haven-staging/$service;format="normalize"$-impl/service:76522824af2733a684f8be3be551ee6a7c519cfd
        ports:
        - containerPort: 8080
        - containerPort: 22222
        - containerPort: 9095
        args: [
          "-Dconfig.resource=$(SERVICE_CONFIG_RESOURCE)",
          "-Dlogger.resource=logback.prod.xml",
          "-Dsentry.dsn=$(SENTRY_DSN)",
          "-Dsecrets.overrideFilePath=/secrets/service/secrets.prod.conf"
        ]
        envFrom:
        - configMapRef:
            name: cluster-global-config
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        volumeMounts:
        - name: repl-ssh-secrets-volume
          mountPath: /secrets/repl
        - name: service-secret-volume
          mountPath: /secrets/service
        - name: kafka-secret-volume
          mountPath: /secrets/kafka
        livenessProbe:
          httpGet:
            path: /monitoring/healthcheck
            port: 8080
          initialDelaySeconds: 45
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /monitoring/healthcheck
            port: 8080
          initialDelaySeconds: 45
          timeoutSeconds: 3
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.09
        env:
        - name: SQL_INSTANCE
          valueFrom:
            configMapKeyRef:
              name: cluster-global-config
              key: SQL_INSTANCE
        command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        args: ["-instances=$(SQL_INSTANCE)"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
          - name: cloudsql
            mountPath: /cloudsql
      volumes:
        - name: repl-ssh-secrets-volume
          secret:
            secretName: repl-ssh-secrets
        - name: service-secret-volume
          secret:
            secretName: service-secrets
            items:
            - key: secrets.conf
              path: secrets.prod.conf
        - name: kafka-secret-volume
          secret:
            secretName: kafka-truststore
            items:
            - key: kafka.keystore.jks
              path: kafka.keystore.jks
            - key: kafka.keystore.p12
              path: kafka.keystore.p12
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir:
